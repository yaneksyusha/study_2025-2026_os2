---
# Preamble

## Author
author:
  name: Юсупова Ксения Равилевна
  email: 1132247531@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Лабораторная работа № 1"
subtitle: "Установка и конфигурация операционной системы на виртуальную машину"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Целью данной работы является приобретение практических навыков установки операционной системы на виртуальную машину, настройки минимально необходимых для дальнейшей работы сервисов.

# Выполнение лабораторной работы

Сначала укажем имя и операционную систему для виртуальной машины ([рис. @fig-001]).

![указали имя и операционную систему для виртуальной машины ](image/1.png){#fig-001 width=70%}

Выбрали 8192 МБ основной паямяти и 2 процеесора ([рис. @fig-002]).

![настройка оборудования](image/2.png){#fig-002 width=70%}

Создали виртуальный жесткий диск размером 40 ГБ ([рис. @fig-003]).

![Создали виртуальный жесткий диск](image/3.png){#fig-003 width=70%}

Выбрали диск для устновки операционной системы ([рис. @fig-004]).

![Выбрали диск для устновки операционной системы](image/4.png){#fig-004 width=70%}

Настроили выбор сети ([рис. @fig-005]).

![выбрали сеть](image/5.png){#fig-005 width=70%}

Настроили имя пользователя с правами администратора ([рис. @fig-006]).

![Настроили имя пользователя](image/6.png){#fig-006 width=70%}

Создали пароль администратора для root ([рис. @fig-007]).

![Создали пароль root](image/7.png){#fig-007 width=70%}

## Выполнение домашнего задания

Для начала просмотрели на вывод этой команды: dmesg | less; затем получили информацию о версии ядра Linux ([рис. @fig-008]).

![информация о версии ядра Linux](image/8.png){#fig-008 width=70%}

Получили информацию о частоте процессора (Detected Mhz processor), модели процессора (CPU0) и объеме доступной оперативной памяти (Memory available)([рис. @fig-009]).

![информация о частоте и модели процессора, об объеме доступной оперативной памяти](image/9.png){#fig-009 width=70%}

Получили информацию о типе обнаруженного гипервизора (Hypervisor detected), типе файловой системы корневого раздела и последовательности монтирования файловых систем([рис. @fig-010]).

![информация о типе обнаруженного гипервизора, типе файловой системы корневого раздела и последовательности монтирования файловых систем](image/10.png){#fig-010 width=70%}

## Ответы на контрольные впросы 

### 1. Укажите команды терминала и приведите примеры.

- Для получения справки по команде используются команды man и --help. Например, команда man ls выведет полное руководство по использованию команды ls, а команда ls --help покажет краткую справку по её основным опциям.

- Для перемещения по файловой системе используется команда cd. Например, cd /var/log переместит вас в каталог /var/log, команда cd без аргументов вернёт в домашний каталог, а cd .. поднимется на уровень вверх. Перед перемещением полезно узнать текущий путь с помощью команды pwd.

- Для просмотра содержимого каталога служит команда ls. Примеры: ls покажет содержимое текущей папки, ls -l выведет подробный список с правами доступа и владельцами, а ls -la покажет ещё и скрытые файлы.

- Для определения объёма каталога используется команда du. Чаще всего её применяют с ключами -sh для отображения общего размера каталога в удобном формате, например: du -sh /home/user.

- Для создания каталогов используется команда mkdir, например, mkdir Projects. Для создания пустых файлов — команда touch, например, touch file.txt. Для удаления файлов — команда rm, например, rm file.txt. Для удаления каталогов вместе с их содержимым — команда rm -r, например, rm -r Old_Projects. Удалять этим способом нужно очень осторожно.

- Для задания прав на файл или каталог используется команда chmod. Права можно задавать в цифровом формате, например, chmod 755 script.sh даст полные права владельцу и чтение-запуск остальным. Или в символьном, например, chmod u+x script.sh добавит право на выполнение для владельца.

- Для просмотра истории команд используется команда history. Чтобы повторить команду под определённым номером, используется восклицательный знак и номер, например, !155. Два восклицательных знака !! повторят последнюю команду. Также для поиска по истории можно использовать сочетание клавиш Ctrl+R.

### 2. Какую информацию содержит учётная запись пользователя? Какие команды позволяют посмотреть информацию о пользователе?

Учётная запись пользователя в Linux хранит всю необходимую информацию для работы системы с пользователем. Эта информация traditionally хранится в текстовом файле /etc/passwd. Каждая запись о пользователе содержит несколько полей, разделённых двоеточиями: имя пользователя (логин), зашифрованный пароль (или символ x, указывающий, что пароль хранится в более защищённом файле /etc/shadow), числовой идентификатор пользователя (UID), числовой идентификатор основной группы (GID), поле для комментария (GECOS), где обычно указывается полное имя пользователя, абсолютный путь к домашнему каталогу пользователя и путь к командной оболочке (shell), которая будет запускаться для этого пользователя по умолчанию.

Посмотреть информацию о пользователе можно несколькими командами. Команда id покажет UID, GID и список всех групп, в которых состоит текущий пользователь. Команда whoami просто выведет имя текущего пользователя. Утилита finger (если она установлена) может показать более подробную информацию из поля GECOS. Также можно напрямую посмотреть запись в файле /etc/passwd с помощью команды grep 'username' /etc/passwd.

### 3. Что такое файловая система? Приведите примеры с краткой характеристикой.

Файловая система — это способ организации, хранения и управления данными на носителе информации, таком как жёсткий диск или SSD. Она определяет, как данные записываются физически на диск, как хранится информация о файлах (их имена, размер, права доступа, время создания — это называется метаданные) и как операционная система получает доступ к этим данным для чтения и записи. Без файловой системы данные на диске представляли бы собой беспорядочный набор информации.

Примеров файловых систем много. ext4 — это стандартная, надёжная и проверенная временем журналируемая файловая система для Linux, которая обеспечивает хороший баланс между производительностью и стабильностью. XFS — это высокопроизводительная файловая система, разработанная для работы с большими файлами и большими томами данных, она часто используется по умолчанию в серверных дистрибутивах, like Rocky Linux и RHEL. Btrfs — это современная файловая система с продвинутыми функциями, такими как создание моментальных снимков (снапшотов), прозрачное сжатие данных и устранение дубликатов. tmpfs — это особый тип файловой системы, которая размещается в оперативной памяти (RAM); она очень быстрая, но все данные в ней временные и стираются после перезагрузки компьютера.

### 4. Как посмотреть, какие файловые системы подмонтированы в ОС?

Чтобы посмотреть, какие файловые системы в данный момент смонтированы в операционной системе, есть несколько команд. Классической является команда mount. Если просто запустить её без параметров, она выведет подробный список всех подмонтированных файловых систем с информацией об устройстве, точке монтирования, типе файловой системы и параметрах монтирования. Более удобной и часто используемой является команда df. Если запустить её с ключом -h (df -h), она покажет список всех смонтированных файловых систем в удобном для человека формате, отобразив их общий размер, занятое и свободное пространство в гигабайтах или мегабайтах. Ещё одна полезная команда — lsblk, которая наглядно отображает дерево блочных устройств (дисков и разделов) и показывает, куда какой раздел смонтирован.

### 5. Как удалить зависший процесс?

Чтобы удалить зависший процесс, нужно сначала найти его числовой идентификатор (PID), а затем отправить ему сигнал на завершение. Поиск PID осуществляется с помощью команды ps aux в сочетании с grep. Например, чтобы найти процесс Firefox, нужно выполнить ps aux | grep firefox. В выводе этой команды будет указан PID процесса. Также для поиска можно использовать интерактивные мониторы системных процессов, такие как top или htop. После того как PID найден, сначала стоит попытаться завершить процесс корректно, отправив ему сигнал TERM с помощью команды kill. Например, kill 1234, где 1234 — это найденный PID. Если процесс не реагирует на вежливый запрос и продолжает висеть, можно принудительно завершить его с помощью сигнала KILL. Для этого используется команда kill -9 1234. Сигнал KILL немедленно завершает процесс без возможности сохранения данных или очистки ресурсов, поэтому это крайняя мера. Также можно завершать процессы по имени с помощью команды pkill, например, pkill firefox или pkill -9 firefox для принудительного завершения.

# Выводы

В ходе лабораторной работы мы  приобрели практические навыки установки операционной системы на виртуальную машину, настройки минимально необходимых для дальнейшей работы сервисов.


